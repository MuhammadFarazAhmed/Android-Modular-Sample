apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.samkazmi.example"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            buildConfigField 'String', 'API_KEY', '"3423v43vv3mn234n32nnn32nnfds32"'
            buildConfigField 'String', 'BASE_URL', '"http://btq.com/test/api/"'
            minifyEnabled true
            zipAlignEnabled true
            versionNameSuffix '-Release'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField 'String', 'API_KEY', '"Pan_TeRaSyCV5strOJBMbK_1oAXLbw4cb8470"'
            buildConfigField 'String', 'BASE_URL', '"http://panterasrv.cloudapp.net/btq_development/api/mobile/"'
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            shrinkResources false
            /* minifyEnabled true
             zipAlignEnabled true
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'*/
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def formattedDate = new Date().format('HH-mm-dd-MMM-YYYY')
            output.outputFileName = "NeedCharge _V${defaultConfig.versionCode}${defaultConfig.versionNameSuffix}_${formattedDate}.apk"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }
    dexOptions {
        preDexLibraries true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/atomicfu.kotlin_module'
    }
}
androidExtensions {
    experimental = true
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha04'
    implementation 'androidx.core:core-ktx:1.1.0-alpha05'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'com.google.firebase:firebase-messaging:17.6.0'

    testImplementation 'junit:junit:4.13-beta-2'
    androidTestImplementation 'androidx.test:runner:1.2.0-alpha04'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0-alpha04'

    implementation 'com.google.dagger:dagger:2.22.1'
    implementation 'com.google.dagger:dagger-android:2.22.1'
    implementation 'com.google.dagger:dagger-android-support:2.22.1'
    kapt "com.google.dagger:dagger-compiler:2.22.1"
    kapt 'com.google.dagger:dagger-android-processor:2.22.1'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.0'

    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:okhttp:3.14.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.1'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'joda-time:joda-time:2.10.1'

    implementation('com.github.bumptech.glide:okhttp3-integration:4.9.0') {
        transitive = false
    }
    implementation 'com.github.bumptech.glide:annotations:4.9.0'
    api project(':Base')
    api project(':DataInterfaces')
    api project(':Repositories')
    api project(':Splash')
    api project(':Onboarding')
    api project(':Home')
}
configurations.all {
    resolutionStrategy.force 'com.android.support:support-v4:28.0.0'
}
